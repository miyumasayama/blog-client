/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/login": {
    /**
     * login機能
     * @description loginのAPIドキュメント
     */
    post: {
      /** @description loginのリクエストボディ */
      requestBody: {
        content: {
          "application/json": components["schemas"]["authorizationRequestBody"];
        };
      };
      responses: {
        /** @description ログイン成功 */
        200: {
          content: {
            "application/json": components["schemas"]["tokenResponse"];
          };
        };
        /** @description validation error */
        422: {
          content: {
            "application/json": components["schemas"]["HTTPValidationError"];
          };
        };
      };
    };
  };
  "/api/logout": {
    /**
     * logout機能
     * @description logoutのAPIドキュメント
     */
    delete: {
      /** @description logoutのリクエストボディ */
      requestBody: {
        content: {
          "application/json": components["schemas"]["logoutRequestBody"];
        };
      };
      responses: {
        /** @description successful logout */
        200: {
          content: {
            "application/json": unknown;
          };
        };
        /** @description validation error */
        422: {
          content: {
            "application/json": components["schemas"]["HTTPValidationError"];
          };
        };
      };
    };
  };
  "/api/register": {
    /**
     * ユーザー登録
     * @description ユーザー登録のAPIドキュメント
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["authorizationRequestBody"];
        };
      };
      responses: {
        /** @description successful register */
        200: {
          content: {
            "application/json": components["schemas"]["tokenResponse"];
          };
        };
        /** @description validation error */
        422: {
          content: {
            "application/json": components["schemas"]["HTTPValidationError"];
          };
        };
      };
    };
  };
  "/api/words": {
    /**
     * Word一覧のAPIドキュメント
     * @description Word一覧取得のAPIドキュメント
     */
    get: {
      parameters: {
        query?: {
          /** @description 1ページあたりのアイテム数 */
          per_page?: number;
          /** @description オフセット */
          offset?: number;
        };
      };
      responses: {
        /** @description 単語一覧成功時 */
        200: {
          content: {
            "application/json": components["schemas"]["words"];
          };
        };
        /** @description validation error */
        422: {
          content: {
            "application/json": components["schemas"]["HTTPValidationError"];
          };
        };
      };
    };
    /**
     * Word作成のAPI
     * @description Word作成のAPIドキュメント
     */
    post: {
      /** @description word作成のリクエストボディ */
      requestBody: {
        content: {
          "application/json": components["schemas"]["createWordRequestBody"];
        };
      };
      responses: {
        /** @description 単語作成時 */
        201: {
          content: {
            "application/json": components["schemas"]["word"];
          };
        };
        /** @description validation error */
        422: {
          content: {
            "application/json": components["schemas"]["HTTPValidationError"];
          };
        };
      };
    };
  };
  "/api/words/{id}": {
    /**
     * Word編集のAPI
     * @description word編集のAPIドキュメント
     */
    put: {
      parameters: {
        path: {
          /** @description id */
          id: number;
        };
      };
      /** @description word編集のリクエストボディ */
      requestBody: {
        content: {
          "application/json": components["schemas"]["word"];
        };
      };
      responses: {
        /** @description 単語修正時 */
        201: {
          content: {
            "application/json": components["schemas"]["word"];
          };
        };
        /** @description validation error */
        422: {
          content: {
            "application/json": components["schemas"]["HTTPValidationError"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    authorizationRequestBody: {
      email: string;
      password: string;
    };
    tokenResponse: {
      token?: string;
    };
    logoutRequestBody: {
      userId?: number;
    };
    word: {
      id: number;
      /** @description 単語の名前 */
      title: string;
      /** @description 単語の意味 */
      definition: string;
    };
    /** words */
    words: {
      data?: components["schemas"]["word"][];
      per_page?: number;
      total?: number;
      last_page?: number;
    };
    createWordRequestBody: {
      /** @description 単語の名前 */
      title: string;
      /** @description 単語の意味 */
      definition: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
